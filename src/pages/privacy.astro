---
import BaseLayout from "../../layouts/BaseLayout.astro";
const title = "Privacy & Cookies";
const description = "Manage your privacy choices for analytics, embeds and ads on LNF Guides.";
const canonical = new URL('/privacy/', Astro.site!);
---

<BaseLayout {title} {description} {canonical}>
  <div class="mx-auto max-w-3xl px-4 py-12">
    <h1 class="text-3xl font-extrabold tracking-tight mb-3">Privacy & Cookies</h1>
    <p class="text-text2 mb-6">Review and change your preferences at any time.</p>

    <section class="card p-4 md:p-5 mb-6">
      <h2 class="text-xl font-semibold mb-2">Your current choices</h2>
      <ul class="space-y-2 text-sm">
        <li class="flex justify-between"><span>Analytics</span> <strong id="st-analytics">–</strong></li>
        <li class="flex justify-between"><span>External embeds</span> <strong id="st-external">–</strong></li>
        <li class="flex justify-between"><span>Ads</span> <strong id="st-ads">–</strong></li>
        <li class="flex justify-between"><span>Personalized ads</span> <strong id="st-ads-p">–</strong></li>
      </ul>
      <div class="mt-4 flex gap-3">
        <button class="btn btn-primary" data-privacy-open>Open privacy settings</button>
        <button id="btn-reset" class="btn btn-outline">Reset consent</button>
      </div>
    </section>

    <section class="prose max-w-none">
      <h2>Notes on ads</h2>
      <p>
        If you allow <strong>Ads</strong> but not <strong>Personalized ads</strong>,
        we request non-personalized ads from Google (NPA). If you enable
        <strong>Personalized ads</strong>, Google may use data to tailor ads to you.
      </p>
    </section>
  </div>

  <script>
    (function(){
      const LS_KEYS = ['lnf-consent-v1','lnf-consent'];
      function readDecisions() {
        try {
          const via = window.consent?.get?.();
          if (via && via.analytics !== undefined) return via;
          if (via?.decisions) return via.decisions;
        } catch {}
        for (const k of LS_KEYS) {
          try {
            const raw = localStorage.getItem(k);
            if (raw) return (JSON.parse(raw)?.decisions) || {};
          } catch {}
        }
        return {};
      }
      function yn(v){ return v ? 'Allowed' : 'Blocked'; }
      function paint(){
        const d = readDecisions();
        document.getElementById('st-analytics').textContent = yn(!!d.analytics);
        document.getElementById('st-external').textContent  = yn(!!d.external);
        document.getElementById('st-ads').textContent       = yn(!!d.ads);
        document.getElementById('st-ads-p').textContent     = yn(!!d.adsPersonalized && !!d.ads);
      }
      paint();
      window.addEventListener('consent:changed', paint);
      window.addEventListener('consent:updated', paint);

      document.getElementById('btn-reset')?.addEventListener('click', (e) => {
        e.preventDefault();
        try {
          localStorage.removeItem('lnf-consent-v1');
          localStorage.removeItem('lnf-consent');
          window.dispatchEvent(new CustomEvent('consent:changed', { detail: { analytics:false, external:false, ads:false, adsPersonalized:false }}));
        } catch {}
        if (window?.consentUI?.open) window.consentUI.open('settings');
        setTimeout(paint, 50);
      });
    })();
  </script>
</BaseLayout>
