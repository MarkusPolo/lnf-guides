---
import "../styles/global.css";
import ConsentBanner from "../components/ConsentBanner.astro";
const { /* ... */ } = Astro.props;

const {
  title = 'LNF Guides',
  description = 'Crisp guides, spoiler-safe tips, and meta updates – built by players, for players.',
  canonical,
  ogImage = '/images/og-default.jpg'
} = Astro.props;

const site = Astro.site?.origin ?? 'https://lnf-guides.example';
const url = canonical ?? new URL(Astro.url.pathname, site);

const OG = { title, description, image: ogImage };
const PLAUSIBLE_DOMAIN = 'lnf-guides.example';
---

<html lang="en" class="dark">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="canonical" href={String(url)} />

    <title>{title}</title>
    <meta name="description" content={description} />

    <!-- OG / Twitter -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={OG.title} />
    <meta property="og:description" content={OG.description} />
    <meta property="og:image" content={OG.image} />
    <meta property="og:url" content={String(url)} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={OG.title} />
    <meta name="twitter:description" content={OG.description} />
    <meta name="twitter:image" content={OG.image} />

    <link rel="icon" href="/images/logo.svg" type="image/svg+xml" />

    <!-- JSON-LD: WebSite + SearchAction + Organization -->
    <script type="application/ld+json">
      {
        "@context":"https://schema.org",
        "@type":"WebSite",
        "url":"{String(site)}",
        "name":"LNF Guides",
        "potentialAction":{
          "@type":"SearchAction",
          "target":"{String(site)}/search?q={query}",
          "query-input":"required name=query"
        }
      }
    </script>
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "Organization",
        "name": "LNF Guides",
        "url": "{String(site)}",
        "logo": "{String(site)}/images/logo.svg",
        "sameAs": ["https://github.com/lnf-guides"]
      }
    </script>

    <!-- Plausible -->
    <script defer data-domain={PLAUSIBLE_DOMAIN} src="https://plausible.io/js/script.js"></script>
  </head>
  <body class="font-sans">
    <a href="#content" class="sr-only focus:not-sr-only focus:fixed focus:left-4 focus:top-4 focus:bg-surface focus:px-3 focus:py-2 focus:rounded">Skip to content</a>
    <header class="sticky top-0 z-[1000] isolate border-b border-border/60 bg-bg backdrop-blur">
      <div class="mx-auto max-w-7xl px-4 py-3 flex items-center gap-4">
        <a href="/" class="flex items-center gap-2">
          <img src="/images/logo.svg" alt="LNF Guides" class="h-7 w-7" />
          <span class="text-lg font-extrabold tracking-tight">LNF Guides</span>
        </a>
        <div class="flex-1 max-w-xl mx-auto hidden md:block">
          <button id="open-search" class="w-full text-left border border-border/60 rounded-full px-4 py-2 text-text2 hover:bg-surface" aria-label="Open search (Cmd/Ctrl+K)">
            Press ⌘/Ctrl K to search…
          </button>
        </div>
        <nav class="flex items-center gap-4 text-sm">
          <a href="/guides/" class="hover:underline">Guides</a>
          <a href="/news/" class="hover:underline">News</a>
          <a href="/updates/" class="hover:underline">Updates</a>
          <a href="/about/" class="hover:underline">About</a>
          <a href="https://discord.gg/" class="btn btn-outline">Discord</a>
          <a href="/contact/" class="btn btn-primary">Subscribe</a>
        </nav>
      </div>
    </header>

    <slot name="search" />
    <main id="content"><slot /></main>

    <footer class="mt-16 border-t border-border/60">
      <div class="mx-auto max-w-7xl px-4 py-12 grid gap-8 md:grid-cols-4 text-sm">
        <section>
          <h3 class="font-semibold mb-3">Site</h3>
          <ul class="space-y-2">
            <li><a href="/">Home</a></li>
            <li><a href="/guides/">Guides</a></li>
            <li><a href="/news/">News</a></li>
            <li><a href="/updates/">Updates</a></li>
          </ul>
        </section>
        <section>
          <h3 class="font-semibold mb-3">Categories</h3>
          <ul class="space-y-2">
            <li><a href="/guides/beginners/">Beginners</a></li>
            <li><a href="/guides/dragons/">Dragons</a></li>
            <li><a href="/guides/crafting/">Crafting</a></li>
            <li><a href="/guides/exploration/">Exploration</a></li>
          </ul>
        </section>
        <section>
          <h3 class="font-semibold mb-3">Legal</h3>
          <ul class="space-y-2">
            <li><a href="/legal/">Legal</a></li>
            <li><a href="/privacy/">Privacy</a></li>
            <li><a href="/contact/">Contact</a></li>
          </ul>
        </section>
        <section>
          <h3 class="font-semibold mb-3">Social</h3>
          <ul class="space-y-2">
            <li><a href="https://github.com/lnf-guides">GitHub</a></li>
          </ul>
        </section>
      </div>
      <div class="mx-auto max-w-7xl px-4 pb-10 text-xs text-text2">
        Unofficial fan site. Not affiliated with Hello Games.
      </div>
    </footer>

    <script>
      document.getElementById('open-search')?.addEventListener('click', () =>
        window.dispatchEvent(new KeyboardEvent('keydown', { key: 'k', ctrlKey: true }))
      );
    </script>
        <!-- Consent core (global) -->
    <script>
      // @ts-nocheck
      (function () {
        const KEY = 'lnf-consent';
        const defaults = { ads: false, external: false, ts: 0 };
        const read = () => {
          try { return Object.assign({}, defaults, JSON.parse(localStorage.getItem(KEY) || '{}')); }
          catch { return { ...defaults }; }
        };
        const write = (v) => {
          localStorage.setItem(KEY, JSON.stringify(v));
          window.dispatchEvent(new CustomEvent('consent:changed', { detail: v }));
        };
        const set = (partial) => write({ ...read(), ...partial, ts: Date.now() });
        const setAll = (value) => write({ ads: value, external: value, ts: Date.now() });
        const decided = () => !!read().ts;

        window.consent = { get: read, set, setAll, decided, KEY };
      })();
    </script>
    <ConsentBanner />
  </body>
</html>
