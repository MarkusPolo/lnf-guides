---
import "../styles/global.css";
import ConsentBanner from "../components/ConsentBanner.astro";

const {
  title,
  description,
  canonical,
  ogImage,
  type = "website",
  category,
} = Astro.props as any;

const site = Astro.site?.origin ?? "https://lnf-guides.com";
const url = canonical ?? new URL(Astro.url.pathname, site);
const siteUrl = String(Astro.site ?? site);

// OG-Fallback
const ogFallbackByCategory: Record<string, string> = {
  dragons: "/images/og/dragons.png",
  beginners: "/images/og/beginners.png",
};
const finalOg = ogImage || ogFallbackByCategory[category] || "/images/og/default.png";

// IDs / Domains
const PLAUSIBLE_DOMAIN = "lnf-guides.com";
const FC_PUBLISHER_ID = "pub-6618488631609364";
---

<html lang="en" class="dark">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="canonical" href={String(url)} />

    <title>{title ?? "LNF Guides"}</title>
    <meta name="description" content={description ?? "Guides & News"} />
    <meta property="og:type" content={type} />
    <meta property="og:title" content={title ?? "LNF Guides"} />
    <meta property="og:description" content={description ?? "Guides & News"} />
    <meta property="og:url" content={String(url)} />
    <meta property="og:image" content={finalOg} />
    <meta property="og:site_name" content="LNF Guides" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title ?? "LNF Guides"} />
    <meta name="twitter:description" content={description ?? "Guides & News"} />
    <meta name="twitter:image" content={finalOg} />
    <link rel="icon" href="/images/logo.svg" type="image/svg+xml" />

    <!-- JSON-LD: WebSite -->
    <script type="application/ld+json">
      {JSON.stringify({
        "@context": "https://schema.org",
        "@type": "WebSite",
        url: siteUrl,
        name: "LNF Guides",
        potentialAction: {
          "@type": "SearchAction",
          target: `${siteUrl}/search?q={query}`,
          "query-input": "required name=query",
        },
      })}
    </script>

    <!-- JSON-LD: Organization -->
    <script type="application/ld+json">
      {JSON.stringify({
        "@context": "https://schema.org",
        "@type": "Organization",
        name: "LNF Guides",
        url: siteUrl,
        logo: `${siteUrl}/images/logo.svg`,
        sameAs: ["https://github.com/lnf-guides"],
      })}
    </script>

    <!-- Google tag (Consent Mode v2, ohne GA) – nur Stub + Default denied -->
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){ dataLayer.push(arguments); }
      gtag('consent', 'default', {
        ad_storage: 'denied',
        ad_user_data: 'denied',
        ad_personalization: 'denied',
        analytics_storage: 'denied',
        wait_for_update: 500
      });
    </script>

    <!-- LNF Consent Bridge: EINZIGE Quelle fürs Gating = LS / window.consent -->
    <script>
      (function(){
        var LS_KEYS = ['lnf-consent-1','lnf-consent-v1','lnf-consent'];
        function readAny(){
          for (var i=0;i<LS_KEYS.length;i++){
            try{ var raw = localStorage.getItem(LS_KEYS[i]); if (raw) return JSON.parse(raw); }catch(e){}
          }
          return null;
        }
        function getDecisions(){
          // 1) window.consent.get(), falls vorhanden
          try{
            var via = window.consent && typeof window.consent.get==='function' ? window.consent.get() : null;
            if (via && (via.analytics!==undefined || via.external!==undefined || via.ads!==undefined)) return {
              analytics: !!via.analytics, external: !!via.external, ads: !!via.ads, adsPersonalized: !!via.adsPersonalized
            };
          }catch(e){}
          // 2) LocalStorage
          var rec = readAny();
          var d = rec && rec.decisions ? rec.decisions : null;
          if (d) return {
            analytics: !!d.analytics, external: !!d.external, ads: !!d.ads, adsPersonalized: !!d.adsPersonalized
          };
          // 3) Fallback: alles aus
          return { analytics:false, external:false, ads:false, adsPersonalized:false };
        }
        var listeners = new Set();
        function emit(){
          var d = getDecisions();
          listeners.forEach(function(fn){ try{ fn(d); }catch(e){} });
          // Kompatible Events für bestehende Komponenten
          try {
            window.dispatchEvent(new CustomEvent('consent:changed', { detail: d }));
            window.dispatchEvent(new Event('consent:updated'));
          } catch(e){}
        }
        // API
        window.lnfConsent = {
          get: getDecisions,
          allowed: function(key){ var d=getDecisions(); return !!d[key]; }, // 'analytics' | 'external' | 'ads' | 'adsPersonalized'
          on: function(cb){ if (typeof cb==='function'){ listeners.add(cb); } },
          off: function(cb){ listeners.delete(cb); }
        };
        // Cross-Tab Sync
        window.addEventListener('storage', function(ev){
          if (!ev || !ev.key) return;
          if (LS_KEYS.includes(ev.key) || ev.key==='lnf-external-embeds') emit();
        });
        // Sofort initial auslösen
        emit();
      })();
    </script>

    <!-- Funding Choices (CMP) – echte ID erst nach Launch -->
    <script async src={"https://fundingchoicesmessages.google.com/i/" + FC_PUBLISHER_ID + "?ers=1"}></script>
    <script>
      (function() {
        function signalGooglefcPresent() {
          if (!window.frames['googlefcPresent']) {
            if (document.body) {
              const iframe = document.createElement('iframe');
              iframe.style = 'width:0;height:0;border:0;display:none';
              iframe.name = 'googlefcPresent';
              document.body.appendChild(iframe);
            } else {
              setTimeout(signalGooglefcPresent, 0);
            }
          }
        }
        signalGooglefcPresent();
      })();
    </script>

    <!-- Plausible: lädt nur, wenn lnfConsent.allowed('analytics') -->
    <script id="plausible-loader" data-domain={PLAUSIBLE_DOMAIN}>
      (function(){
        var loaded = false;
        function load(){
          if (loaded) return;
          loaded = true;
          var d = document.currentScript?.getAttribute('data-domain') || '';
          if (!d) return;
          var s = document.createElement('script');
          s.defer = true;
          s.src = 'https://plausible.io/js/script.js';
          s.setAttribute('data-domain', d);
          s.id = 'plausible-script';
          document.head.appendChild(s);
        }
        function allowed(){
          try { return !!(window.lnfConsent && window.lnfConsent.allowed('analytics')); }
          catch(e){ return false; }
        }
        if (allowed()) load();
        // auf Änderungen reagieren
        try{
          window.lnfConsent && window.lnfConsent.on(function(d){ if (d && d.analytics) load(); });
        }catch(e){}
      })();
    </script>
  </head>
  <body class="font-sans bg-bg text-text">
    <a href="#content" class="sr-only focus:not-sr-only focus:fixed focus:left-4 focus:top-4 focus:bg-surface focus:px-3 focus:py-2 focus:rounded">Skip to content</a>

    <header class="sticky top-0 z-[1000] isolate border-b border-border/60 bg-bg backdrop-blur">
      <div class="mx-auto max-w-7xl px-4 py-3 flex items-center gap-4">
        <a href="/" class="flex items-center gap-2">
          <img src="/images/logo.svg" alt="LNF Guides" class="h-7 w-7" />
          <span class="text-lg font-extrabold tracking-tight">LNF Guides</span>
        </a>

        <div class="flex-1 max-w-xl mx-auto hidden md:block">
          <button
            id="open-search"
            class="w-full text-left border border-border/60 rounded-full px-4 py-2 text-text2 hover:bg-surface"
            aria-label="Open search (Cmd/Ctrl+K)"
          >Press ⌘/Ctrl K to search…</button>
        </div>

        <nav class="flex items-center gap-4 text-sm">
          <a href="/guides/" class="hover:underline">Guides</a>
          <a href="/news/" class="hover:underline">News</a>
          <a href="/updates/" class="hover:underline">Updates</a>
          <a href="/about/" class="hover:underline">About</a>
          <a href="/contact/" class="btn btn-primary">Subscribe</a>
          <button class="underline hover:text-text" data-privacy-open>Privacy settings</button>
        </nav>
      </div>
    </header>

    <slot name="search" />
    <main id="content"><slot /></main>

    <footer class="mt-16 border-t border-border/60">
      <div class="mx-auto max-w-7xl px-4 py-12 grid gap-8 md:grid-cols-4 text-sm">
        <section>
          <h3 class="font-semibold mb-3">Site</h3>
          <ul class="space-y-2">
            <li><a href="/">Home</a></li>
            <li><a href="/guides/">Guides</a></li>
            <li><a href="/news/">News</a></li>
            <li><a href="/updates/">Updates</a></li>
          </ul>
        </section>
        <section>
          <h3 class="font-semibold mb-3">Legal</h3>
          <ul class="space-y-2">
            <li><a href="/privacy/">Privacy</a></li>
            <li><a href="/contact/">Contact</a></li>
            <li><a href="/legalnotice/">Legal Notice</a></li>
            <li><a href="/impressum/">Legal Notice (DE) / Impressum</a></li>
          </ul>
        </section>
        <section class="md:col-span-2">
          <h3 class="font-semibold mb-3">Controls</h3>
          <button class="underline" data-privacy-open>Privacy settings</button>
        </section>
      </div>
      <div class="mx-auto max-w-7xl px-4 pb-10 text-xs text-text2">
        Unofficial fan site. Not affiliated with Hello Games.
      </div>
    </footer>

    <!-- Search trigger -->
    <script>
      document.getElementById('open-search')?.addEventListener('click', () =>
        window.dispatchEvent(new KeyboardEvent('keydown', { key: 'k', ctrlKey: true }))
      );
    </script>

    <!-- Privacy-Opener: eigene UI, sonst CMP-Fallback -->
    <script>
      (function(){
        function openPrivacy(){
          if (window.consentUI && typeof window.consentUI.open === 'function') {
            window.consentUI.open('settings'); return;
          }
          try { if (typeof __tcfapi === 'function') { __tcfapi('displayConsentUi', 2, function(){}); return; } } catch(e){}
          try { window.fundingChoices?.showConsentDialog?.(); } catch(e){}
        }
        document.addEventListener('click', function(ev){
          const t = ev.target?.closest?.('[data-privacy-open]');
          if (!t) return;
          ev.preventDefault();
          openPrivacy();
        });
        window.managePrivacy = openPrivacy;
      })();
    </script>

    <!-- Externe Embeds: lokale Einstellung + standardisierte Events -->
    <script>
      (function(){
        window.lnfExternal = {
          get(){ try { return !!JSON.parse(localStorage.getItem('lnf-external-embeds')||'false'); } catch { return false; } },
          set(v){
            try { localStorage.setItem('lnf-external-embeds', JSON.stringify(!!v)); } catch {}
            // Bridge informiert automatisch via 'storage' und emit()
            try {
              var d = (window.lnfConsent && window.lnfConsent.get && window.lnfConsent.get()) || {};
              var detail = { analytics:!!d.analytics, ads:!!d.ads, adsPersonalized:!!d.adsPersonalized, external:!!v };
              window.dispatchEvent(new CustomEvent('consent:changed', { detail }));
              window.dispatchEvent(new Event('consent:updated'));
            } catch(e){}
          }
        };
      })();
    </script>

    <!-- Banner am Ende mounten (setzt Consent Mode für Google, aber Gating läuft über Bridge) -->
    <ConsentBanner />
  </body>
</html>
