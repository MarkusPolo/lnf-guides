---
interface Props {
  repo: string;
  repoId: string;
  category: string;
  categoryId: string;
  mapping?: string;
  lang?: string;
  theme?: string;
  class?: string;
}
const {
  repo,
  repoId,
  category,
  categoryId,
  mapping = "pathname",
  lang = "en",
  theme = "preferred_color_scheme",
  class: cls = "",
} = Astro.props as Props;

const hostId = `giscus-host-${Math.random().toString(36).slice(2)}`;
const cfg = { repo, repoId, category, categoryId, mapping, lang, theme };
---

<section class={`mt-10 ${cls}`}>
  <div class="rounded-card border border-border/60 bg-[#0f1422] p-4 shadow-soft">
    <h2 class="text-lg font-extrabold mb-3">Comments</h2>
    <div id={hostId} class="min-h-[200px]">
      <div class="text-sm text-text2">
        Comments are blocked until you enable <strong>External embeds</strong> in your privacy settings.
        <button type="button" class="underline ml-1" data-giscus-open-privacy>Manage privacy</button>
      </div>
    </div>
  </div>
</section>

<script define:vars={{ hostId, cfg }}>
  // @ts-nocheck
  (function () {
    const STORAGE_KEY = "lnf-consent";

    let mounted = false;
    let pollTimer = null;

    function getState() {
      try {
        const viaApi = window.consent?.get?.();
        if (viaApi && typeof viaApi === "object") return viaApi;
      } catch {}
      try {
        const raw = localStorage.getItem(STORAGE_KEY);
        return raw ? JSON.parse(raw) : null;
      } catch { return null; }
    }
    function allowExternal() {
      const s = getState();
      return !!s?.decisions?.external;
    }

    function mountGiscus() {
      const host = document.getElementById(hostId);
      if (!host) return;
      if (host.querySelector("iframe.giscus-frame") || document.getElementById("giscus-script")) {
        mounted = true;
        return;
      }
      const s = document.createElement("script");
      s.src = "https://giscus.app/client.js";
      s.async = true;
      s.crossOrigin = "anonymous";
      s.id = "giscus-script";
      s.setAttribute("data-repo", cfg.repo);
      s.setAttribute("data-repo-id", cfg.repoId);
      s.setAttribute("data-category", cfg.category);
      s.setAttribute("data-category-id", cfg.categoryId);
      s.setAttribute("data-mapping", cfg.mapping);
      s.setAttribute("data-strict", "0");
      s.setAttribute("data-reactions-enabled", "1");
      s.setAttribute("data-emit-metadata", "0");
      s.setAttribute("data-input-position", "bottom");
      s.setAttribute("data-theme", cfg.theme);
      s.setAttribute("data-lang", cfg.lang);
      host.innerHTML = "";
      host.appendChild(s);
      mounted = true;
    }

    function showBlocked() {
      const host = document.getElementById(hostId);
      if (!host) return;
      host.innerHTML =
        '<div class="text-sm text-text2">Comments are blocked until you enable <strong>External embeds</strong> in your privacy settings. <button type="button" class="underline ml-1" data-giscus-open-privacy>Manage privacy</button></div>';
      document.getElementById("giscus-script")?.remove();
      mounted = false;
    }

    function apply() {
      if (allowExternal()) mountGiscus();
      else showBlocked();
    }

    document.addEventListener("click", (e) => {
      const t = e.target;
      if (t && t.matches?.("[data-giscus-open-privacy]")) {
        window.consent?.open?.();
      }
    });

    window.addEventListener("consent:updated", apply);
    document.addEventListener("DOMContentLoaded", () => {
      apply();
      if (!mounted) {
        pollTimer = setInterval(() => {
          if (allowExternal()) {
            apply();
            clearInterval(pollTimer);
          }
        }, 800);
        setTimeout(() => clearInterval(pollTimer), 6000);
      }
    });
  })();
</script>
