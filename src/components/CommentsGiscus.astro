---
interface Props {
  repo: string;        // z.B. "MarkusPolo/lnf-guides"
  repoId?: string;
  category?: string;
  categoryId?: string;
  mapping?: string;    // "pathname" | "title" | ...
  lang?: string;       // "en"
  theme?: string;      // "dark" | "preferred_color_scheme" | ...
}

const {
  repo = '',
  repoId = '',
  category = '',
  categoryId = '',
  mapping = 'pathname',
  lang = 'en',
  theme = 'dark',
} = Astro.props as Props;

const canRender = !!repo;
---

{canRender && (
  <section class="mt-12" id="comments">
    <div class="card p-4 md:p-5 w-full">
      <div class="font-semibold mb-2">Comments</div>
      <div id="giscus_thread" class="min-h-[200px]"></div>
      <div id="giscus_guard" class="text-sm text-text2"></div>
    </div>

    <!-- Konfiguration sicher Ã¼ber data-Attribute -->
    <div id="giscus_cfg"
         data-repo={repo}
         data-repo-id={repoId}
         data-category={category}
         data-category-id={categoryId}
         data-mapping={mapping}
         data-lang={lang}
         data-theme={theme}
         hidden></div>
  </section>
)}

{canRender ? (
  <script is:inline>
    // @ts-nocheck
    (function () {
      const cfgEl = document.getElementById('giscus_cfg');
      const mount = document.getElementById('giscus_thread');
      const guard = document.getElementById('giscus_guard');

      function loadGiscus() {
        if (!mount || !cfgEl) return;
        if (document.querySelector('script[data-giscus]')) return;

        const d = cfgEl && cfgEl.dataset ? cfgEl.dataset : {};
        const s = document.createElement('script');
        s.src = 'https://giscus.app/client.js';
        s.async = true;
        s.crossOrigin = 'anonymous';
        s.setAttribute('data-giscus', 'true');

        if (d.repo)        s.setAttribute('data-repo', d.repo);
        if (d.repoId)      s.setAttribute('data-repo-id', d.repoId);
        if (d.category)    s.setAttribute('data-category', d.category);
        if (d.categoryId)  s.setAttribute('data-category-id', d.categoryId);

        s.setAttribute('data-mapping', d.mapping || 'pathname');
        s.setAttribute('data-strict', '0');
        s.setAttribute('data-reactions-enabled', '1');
        s.setAttribute('data-emit-metadata', '0');
        s.setAttribute('data-input-position', 'bottom');
        s.setAttribute('data-theme', d.theme || 'dark');
        s.setAttribute('data-lang', d.lang || 'en');
        s.setAttribute('data-loading', 'lazy');

        mount.appendChild(s);
      }

      function renderCTA() {
        if (!guard) return;
        guard.innerHTML = `
          <div class="mt-3 flex items-center gap-3">
            <span>Comments are disabled until you enable external embeds.</span>
            <button id="enable-ext" class="btn btn-primary">Enable</button>
          </div>`;
        const btn = document.getElementById('enable-ext');
        btn && btn.addEventListener('click', () => {
          const cons = window && window['consent'];
          cons && cons.set && cons.set({ external: true });
        });
      }

      function check() {
        const cons = window && window['consent'];
        const c = cons && cons.get ? cons.get() : null;
        if (c && c.external) {
          if (guard) guard.innerHTML = '';
          loadGiscus();
        } else {
          renderCTA();
        }
      }

      setTimeout(check, 2000);
      window.addEventListener('consent:changed', check);
    })();
  </script>
) : (
  <script is:inline>console.warn('Giscus repo not configured; comments hidden')</script>
)}
